# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- feature/*
- fix/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: Debug
  version: 1.3.0
  buildNumber: $(Build.BuildNumber)

steps:

# restore solution projects
- task: DotNetCoreCLI@2
  displayName: 'Restore solution projects'
  inputs:
    command: 'restore'
    arguments: '--configuration $(buildConfiguration)'
    verbosityRestore: 'minimal'

# build solution projects
- task: DotNetCoreCLI@2
  displayName: 'Build solution projects'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) /p:Version=$(version)-develop-$(buildNumber) --no-restore'

# test solution project
- task: DotNetCoreCLI@2
  displayName: 'Test and analyze solution projects'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect="XPlat Code Coverage" --no-restore --no-build'

# generate summary coverage report
- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: 'Generate summary coverage report'
  inputs:
    reports: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    targetdir: '$(Agent.TempDirectory)/cchtml'
    assemblyfilters: '-FluentValidation'

# publish summary coverage report
- task: PublishCodeCoverageResults@1
  displayName: 'Publish summary coverage report'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/cchtml/Cobertura.xml'

# pack solution projects
- task: DotNetCoreCLI@2
  displayName: 'Pack solution projects'
  inputs:
    command: 'custom'
    custom: 'pack'
    arguments: '--configuration $(buildConfiguration) /p:Version=$(version)-develop-$(buildNumber) --no-restore --no-build --output $(Build.ArtifactStagingDirectory)'

# publish artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'PypeNugetDevelop'
    publishLocation: 'Container'